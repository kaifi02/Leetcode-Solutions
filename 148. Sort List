Given the head of a linked list, return the list after sorting it in ascending order.

 

Example 1:


Input: head = [4,2,1,3]
Output: [1,2,3,4]
Example 2:


Input: head = [-1,5,3,4,0]
Output: [-1,0,3,4,5]
Example 3:

Input: head = []
Output: []
 

Constraints:

The number of nodes in the list is in the range [0, 5 * 104].
-105 <= Node.val <= 105


Solution.

Code in Java


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode sortList(ListNode head) {
         int i=0;
         if(head==null||head.next==null)return head;
         ListNode p=head;
         while(p!=null)
         {
             i++;
             p=p.next;
         }
         int a[]=new int[i];
         p=head;
         i=0;
         while(p!=null)
         {
             a[i++]=p.val;
             p=p.next;
         }
         p=head;
         Arrays.sort(a);
         i=0;
         while(p!=null)
         {
            p.val = a[i++];
             p=p.next;
         }
         return head;
    }
}
