Given two strings s and t, return true if s is a subsequence of t, or false otherwise.

A subsequence of a string is a new string that is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (i.e., "ace" is a subsequence of "abcde" while "aec" is not).

 

Example 1:

Input: s = "abc", t = "ahbgdc"
Output: true
Example 2:

Input: s = "axc", t = "ahbgdc"
Output: false
 

Constraints:

0 <= s.length <= 100
0 <= t.length <= 104
s and t consist only of lowercase English letters.


Solution:

Code in C:
bool isSubsequence(char * s, char * t){
int i,j,slength=0;
i=j=0;
for(i=0;i<s[i]!='\0';i++)
{
   
}
slength=i;
i=0;
while(t[j]!='\0')
{
    if(i==slength)return true;
    if(s[i]==t[j])
    {
        i++;
    }
    j++;
}
return i == slength;
}
