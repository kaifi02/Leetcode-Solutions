Given head which is a reference node to a singly-linked list. The value of each node in the linked list is either 0 or 1. The linked list holds the binary representation of a number.

Return the decimal value of the number in the linked list.

The most significant bit is at the head of the linked list.

 

Example 1:


Input: head = [1,0,1]
Output: 5
Explanation: (101) in base 2 = (5) in base 10
Example 2:

Input: head = [0]
Output: 0
 

Constraints:

The Linked List is not empty.
Number of nodes will not exceed 30.
Each node's value is either 0 or 1.


Solution:

Code in C:


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
int getDecimalValue(struct ListNode* head){
 struct ListNode *p=head;   
 int i,c,count=0,s=0;
 while(p!=NULL)
 {
     count++;
     p=p->next;
 }
 p=head;
 c=count-1;
 for(i=0;i<count;i++)
 {
    s=(p->val)*pow(2,c)+s;
    p=p->next;
    c--; 
 }
 return s;
}
